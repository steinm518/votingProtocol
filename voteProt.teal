#pragma version 8
txn ApplicationID
int 0
==
bnz main_l23
txn OnCompletion
int DeleteApplication
==
bnz main_l22
txn OnCompletion
int UpdateApplication
==
bnz main_l21
txn OnCompletion
int CloseOut
==
bnz main_l20
txn OnCompletion
int OptIn
==
bnz main_l19
txna ApplicationArgs 0
byte "Vote"
==
bnz main_l18
txna ApplicationArgs 0
byte "NewApp"
==
bnz main_l17
txna ApplicationArgs 0
byte "CheckVote"
==
bnz main_l13
txna ApplicationArgs 0
byte "AddVote"
==
bnz main_l12
txna ApplicationArgs 0
byte "Address"
==
bnz main_l11
err
main_l11:
byte "Address "
global CreatorAddress
concat
log
int 1
return
main_l12:
global CallerApplicationID
itob
box_len
store 2
store 1
load 2
assert
global CurrentApplicationAddress
balance
byte "prevBal"
app_global_get
-
store 0
byte "prevBal"
global CurrentApplicationAddress
balance
app_global_put
int 1
assert
txna ApplicationArgs 1
sha256
txna ApplicationArgs 1
len
int 128
+
box_create
assert
txna ApplicationArgs 1
sha256
int 0
global CallerApplicationID
itob
int 0
itob
concat
txna ApplicationArgs 1
concat
box_replace
load 0
int 2500
int 400
txna ApplicationArgs 1
len
int 128
+
int 32
+
*
+
>=
assert
global CallerApplicationID
itob
log
int 1
return
main_l13:
txna ApplicationArgs 1
sha256
box_get
store 11
store 10
load 11
assert
load 10
len
int 8
int 8
+
-
pop
load 10
len
int 8
int 8
+
-
txna ApplicationArgs 1
len
==
assert
int 0
store 9
main_l14:
load 10
len
int 8
int 8
+
-
int 8
int 8
+
+
load 9
int 64
+
>=
bnz main_l16
txna ApplicationArgs 1
sha256
load 9
txna ApplicationArgs 1
len
int 64
%
box_extract
pop
txna ApplicationArgs 1
load 9
int 8
int 8
+
-
txna ApplicationArgs 1
len
int 64
%
extract3
pop
txna ApplicationArgs 1
sha256
load 9
txna ApplicationArgs 1
len
int 64
%
box_extract
txna ApplicationArgs 1
load 9
int 8
int 8
+
-
txna ApplicationArgs 1
len
int 64
%
extract3
b==
assert
int 1
assert
txna ApplicationArgs 2
sha256
int 8
int 8
int 2
*
box_extract
btoi
store 7
global CallerApplicationID
itob
int 8
int 8
+
int 8
int 8
int 2
*
+
box_extract
btoi
store 8
load 7
int 100
*
txna ApplicationArgs 1
btoi
/
load 8
>=
assert
txna ApplicationArgs 2
sha256
box_del
pop
int 1
return
main_l16:
txna ApplicationArgs 1
sha256
load 9
int 64
box_extract
pop
txna ApplicationArgs 1
load 9
int 8
int 8
+
-
int 64
extract3
pop
txna ApplicationArgs 1
sha256
load 9
int 64
box_extract
txna ApplicationArgs 1
load 9
int 8
int 8
+
-
int 64
extract3
b==
assert
load 9
int 64
+
store 9
b main_l14
main_l17:
global CallerApplicationID
itob
box_len
store 2
store 1
load 2
!
assert
global CallerApplicationID
itob
btoi
assert
global CallerApplicationID
itob
int 8
int 2
*
box_create
pop
global CallerApplicationID
itob
int 0
txna ApplicationArgs 1
txna ApplicationArgs 2
concat
box_replace
int 1
return
main_l18:
txna Accounts 1
global CurrentApplicationID
app_opted_in
txna Accounts 1
global CallerApplicationID
app_opted_in
&&
global CallerApplicationID
itob
box_len
store 2
store 1
load 2
&&
txna ApplicationArgs 1
box_get
store 5
store 4
load 5
assert
txna ApplicationArgs 1
int 0
int 8
box_extract
store 3
load 3
global CallerApplicationID
itob
==
assert
int 1
&&
int 1
txna ApplicationArgs 1
app_local_get
!
&&
global CurrentApplicationAddress
balance
byte "prevBal"
app_global_get
-
store 0
byte "prevBal"
global CurrentApplicationAddress
balance
app_global_put
int 1
&&
assert
global CallerApplicationID
itob
int 0
int 8
box_extract
pop
load 0
global CallerApplicationID
itob
int 0
int 8
box_extract
btoi
>=
assert
int 1
txna ApplicationArgs 1
int 1
app_local_put
load 5
assert
txna ApplicationArgs 1
int 8
int 8
box_extract
btoi
store 6
load 6
int 1
+
store 6
txna ApplicationArgs 1
int 8
load 6
itob
box_replace
int 1
assert
int 1
return
main_l19:
int 1
return
main_l20:
int 1
return
main_l21:
int 0
return
main_l22:
int 0
return
main_l23:
byte "prevBal"
global CurrentApplicationAddress
balance
app_global_put
global CurrentApplicationAddress
log
int 1
return